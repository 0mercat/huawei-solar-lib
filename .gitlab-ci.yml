---
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install twine tox flake8 codecov

codecov:
  stage: test
  script:
    - tox -e coverage
    - codecov --token=673d3fbf-c00a-49f6-871c-c5b8a12ba89e

linting:
  stage: test
  script:
    - tox -e black, yamllint, flake8

pypi_release:
  stage: deploy
  cache: {}
  script:
    - python setup.py sdist bdist_wheel
    - twine check dist/*
    # try upload in test platform before the oficial
    - twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - >
      pip install --no-deps
      --index-url https://test.pypi.org/simple/
      helpdev==$CI_COMMIT_TAG
    - pip uninstall helpdev -y
    # upload to oficial
    - twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
    - pip install helpdev==$CI_COMMIT_TAG
    - helpdev --version
    - pip uninstall helpdev -y
  only:
    - tags

python36:
  image: python:3.6
  stage: test
  script: tox -e py36

python37:
  stage: test
  script: tox -e py37

python38:
  stage: test
  script: tox -e py38
...
